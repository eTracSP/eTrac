@{
    long locationId = 0;
    long userId = 0;
    long userType = 0;
    WorkOrderEMS.Models.eTracLoginModel ObjLogin = new WorkOrderEMS.Models.eTracLoginModel();
    ObjLogin = (WorkOrderEMS.Models.eTracLoginModel)Session["eTrac"];
    if (ObjLogin != null)
    {
        locationId = ObjLogin.LocationID;
        userId = ObjLogin.UserId;
        userType = ObjLogin.UserRoleId;
    }
}
<script src="@Url.Content("~/Scripts/jquery.signalR-2.2.0.min.js")"></script>
<!--Reference the autogenerated SignalR hub script. -->
<script src="@Url.Content("~/signalr/hubs")"></script>
<script type="text/javascript">
    var LocationId = '@locationId';
    var UserId = '@userId';
    var UserType = '@userType';

    // Global variables for each jchartfx chart/gauge/etc which will be displayed and refreshed
    var clockTimerID = null;
    var clockTimerRunning = false;

    var dataTimerID = null;
    var dataTimerRunning = false;



    // Perform the dashboard object initialization
    function loadDashboard() {

        // Populate the data
        var items = populateSampleLogs();
        createTable_RecentLogs("divRecentLogTable", items);

        // --- Clock --- //
        document.getElementById("ClockTime").innerHTML = "12:00 AM";
        document.getElementById("ClockDate").innerHTML = "Thursday, January 1, 2015";

        // ------------------------------------------------------------------------------- //

        // Start the clock
        startClock();
    }

    // ------------------------------------------------------------------------------- //

    function stopClock() {
        if (clockTimerRunning)
            clearTimeout(clockTimerID);
        clockTimerRunning = false;
    }

    function startClock() {
        stopClock();
        updateTimeDate();
    }

    // ------------------------------------------------------------------------------- //

    function updateTimeDate() {

        var now = Date.now();
        document.getElementById("ClockTime").innerHTML = now.toString("h:mm tt");
        document.getElementById("ClockDate").innerHTML = now.toString("dddd, MMMM d, yyyy");

        clockTimerID = setTimeout("updateTimeDate()", 5000); // 5 seconds
        clockTimerRunning = true;
    }
    // ------------------------------------------------------------------------------- //
    // The main dashboard SignalR refresh javascript (jquery)
    $(document).ready(function () {

        // The generated client-side hub proxy variable
        var dashboard = $.connection.dashboardHub;

        // Refresh the chart component of the given name with the given data -- these names should match those in DashboardData
        function refreshChart(elementName, elementJSON) {
            var dataJSON;

            switch (elementName) {
                case "divCountPanel":
                    if (elementJSON.length > 0) {

                        // Disabled as clock refreshed by client side timer above instead of server timer, but left for example
                        dataJSON = JSON.parse(elementJSON);
                        //*******************Count panel*******************************//
                        $('#divCountPanel #QrcCount').text(dataJSON.CountPanel[0]['QrcCount']);
                        $('#divCountPanel #WorkRequestCount').text(dataJSON.CountPanel[0]['WorkRequestCount']);
                        $('#divCountPanel #UserCount').text(dataJSON.CountPanel[0]['UserCount']);
                        $('#divCountPanel #VendorsVehicleCount').text(dataJSON.CountPanel[0]['VendorsVehicleCount']);
                        $('#divPieUserGraph #pieEmpCount').data('percent', (dataJSON.CountPanel[0]['EmpCount']));
                        $('#divPieUserGraph #EmpCount').text(dataJSON.CountPanel[0]['EmpCount']);
                        $('#divPieUserGraph #AdminCount').text(dataJSON.CountPanel[0]['AdminCount']);
                        $('#divPieUserGraph #ManagerCount').text(dataJSON.CountPanel[0]['ManagerCount']);
                        $('#divPieUserGraph #ClientCount').text(dataJSON.CountPanel[0]['ClientCount']);
                        $('#diveCashAndInfraction #eCash').text('$' + dataJSON.CountPanel[0]['eCash']);
                        $('#diveCashAndInfraction #eCashLastAmt').text('$' + dataJSON.CountPanel[0]['eCashLastAmt']);
                        $('#diveCashAndInfraction #PaidBy').text(dataJSON.CountPanel[0]['PaidBy']);
                        $('#diveCashAndInfraction #AcceptedBy').text(dataJSON.CountPanel[0]['AcceptedBy']);
                        $('#diveCashAndInfraction #InfractionCount').text(dataJSON.CountPanel[0]['InfractionCount']);
                        $('#diveCashAndInfraction #Declined').text(dataJSON.CountPanel[0]['Declined']);
                        $('#diveCashAndInfraction #Approved').text(dataJSON.CountPanel[0]['Approved']);
                        $('#divScannedByPanel #PhoneSystems').text(dataJSON.CountPanel[0]['PhoneSystems']);
                        $('#divScannedByPanel #Devices').text(dataJSON.CountPanel[0]['Devices']);
                        $('#divScannedByPanel #TrashCan').text(dataJSON.CountPanel[0]['TrashCan']);
                        $('#divScannedByPanel #Elevator').text(dataJSON.CountPanel[0]['Elevator']);
                        $('#divScannedByPanel #Equipment').text(dataJSON.CountPanel[0]['Equipment']);
                        $('#divScannedByPanel #TicketSpitter').text(dataJSON.CountPanel[0]['TicketSpitter']);
                        $('#divScannedByPanel #Vehicle').text(dataJSON.CountPanel[0]['Vehicle']);
                        $('#divScannedByPanel #BusStation').text(dataJSON.CountPanel[0]['BusStation']);
                        $('#divScannedByPanel #MovingWalkway').text(dataJSON.CountPanel[0]['MovingWalkway']);
                        $('#divScannedByPanel #Escalators').text(dataJSON.CountPanel[0]['Escalators']);
                        $('#divScannedByPanel #Bathroom').text(dataJSON.CountPanel[0]['Bathroom']);
                        $('#divScannedByPanel #ParkingFacility').text(dataJSON.CountPanel[0]['ParkingFacility']);
                        $('#divScannedByPanel #ShuttleBus').text(dataJSON.CountPanel[0]['ShuttleBus']);
                        $('#divScannedByPanel #GateArm').text(dataJSON.CountPanel[0]['GateArm']);


                        //******************* Work Order Pie Chart ***********************************//
                        var arrData = [];
                        if (dataJSON.WorkStatus.length > 0) {
                            for (i = 0; i < dataJSON.WorkStatus.length; i++) {
                                arrData.push({
                                    title: dataJSON.WorkStatus[i].Title,
                                    value: parseInt(dataJSON.WorkStatus[i].Value)
                                });
                            }
                        }
                        if (dataJSON.WorkProjectType.length > 0) {
                            for (i = 0; i < dataJSON.WorkProjectType.length; i++) {
                                arrData.push({
                                    title: dataJSON.WorkProjectType[i].Title,
                                    value: parseInt(dataJSON.WorkProjectType[i].Value)
                                });
                            }
                        }
                        var chart = AmCharts.makeChart("workOrderChart", {
                            "type": "pie",
                            "theme": "light",
                            "radius": "30%",
                            "innerRadius": "50%",
                            "gradientRatio": [-0.4, -0.4, -0.4, -0.4, -0.4, -0.4, 0, 0.1, 0.2, 0.1, 0, -0.2, -0.5],
                            "dataProvider": arrData,
                            "labelText": "[[title]]",
                            "balloonText": "[[value]]",
                            "valueField": "value",
                            "titleField": "title",
                            "balloon": {
                                "drop": true,
                                "adjustBorderColor": false,
                                "color": "#FFFFFF",
                                "fontSize": 16
                            },
                            "export": {
                                "enabled": true
                            }
                        });
                        //******************* Work Order Pie Chart End *******************************//

                        //*******************DAR Marquee*******************************//
                        // dataJSON.CountPanel[0]["QrcCount"]
                        var DARBody = '';
                        $('#divDarDetails #darDetail').append('');
                        if (dataJSON.DarDetail.length > 0) {
                            for (i = 0; (i < dataJSON.DarDetail.length) ; i++) {
                                DARBody += '<tr><td><div class="zoomin"><img src=' + $_HostPrefix + 'Content/Images/ProfilePic/' + dataJSON.DarDetail[i]['ProfileImage'] + '></div> <div class="dailyActRp"><strong>' + dataJSON.DarDetail[i]['TaskType'] + '</strong><br>' + dataJSON.DarDetail[i]['ActivityDetails'] + '</div></td></tr>';
                            }
                        }
                        $('#divDarDetails #darDetail').html(DARBody);
                        //*******************DAR Marquee End*******************************//


                    }
                    break;
                case "divPieWorkOrderGraph":
                    if (elementJSON.length > 0) {
                        dataJSON = JSON.parse(elementJSON);

                        if (dataJSON != "") {
                            if (typeof dataJSON[0]["ErrorMsg"] == 'undefined') {
                                logsByDayChart.setDataSource(dataJSON);
                            }
                            else {
                                window.alert("Data Service Error: " + dataJSON[0]["ErrorMsg"]);
                            }
                        }
                    }
                    break;
                case "divPieUserGraph":
                    if (elementJSON.length > 0) {
                        dataJSON = JSON.parse(elementJSON);

                        if (dataJSON != "") {
                            if (typeof dataJSON[0]["ErrorMsg"] == 'undefined') {
                                cachesByTypeChart.setDataSource(dataJSON);
                            }
                            else {
                                window.alert("Data Service Error: " + dataJSON[0]["ErrorMsg"]);
                            }
                        }
                    }
                    break;
                case "divDarDetails":
                    if (elementJSON.length > 0) {
                        dataJSON = JSON.parse(elementJSON);

                        if (dataJSON != "") {
                            if (typeof dataJSON[0]["ErrorMsg"] == 'undefined') {
                                findRateGauge.setMainValue(dataJSON[0]['FindRateToday']);
                                findRateGauge_SetColors();
                            }
                            else {
                                window.alert("Data Service Error: " + dataJSON[0]["ErrorMsg"]);
                            }
                        }
                    }
                    break;
                case "divUnAssignedWODetails":
                    if (elementJSON.length > 0) {
                        dataJSON = JSON.parse(elementJSON);

                        if (dataJSON != "") {
                            if (typeof dataJSON[0]["ErrorMsg"] == 'undefined') {
                                createTable_RecentLogs("divRecentLogTable", dataJSON);
                            }
                            else {
                                window.alert("Data Service Error: " + dataJSON[0]["ErrorMsg"]);
                            }
                        }
                    }
                    break;
            }

        }

        // Client-side update hub method called by the server to refresh dashboard components and performs all subsequent data retrievals and sets
        dashboard.client.updateDashboardData = function (dataItems) {

            refreshChart(dataItems.ElementName, dataItems.ElementDataJSON);
        }

        // Start the connection
        $.connection.hub.start().done(function () {
             
            var LocationId = '@locationId';
            var UserId = '@userId';
            var UserType = '@userType';
            var LocationId = $("#drp_MasterLocation").val();
            dashboard.server.getAllData(LocationId, UserId).done(function (dataItems) {
           
                // Loop through each data item retrieved from the server and update dashboard components
                $.each(dataItems, function () {
                    refreshChart(this.ElementName, this.ElementDataJSON);
                });
            });
        });



    });

</script>
