@model WorkOrderEMS.Models.VehiclesModel

<div id="Vehicleform">
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.VehicleModel.VehicleID)
    @Html.AntiForgeryToken()
    <div class="col-lg-12 col-md-12  col-sm-12  col-xs-12">
        <div class="panel-body">
            <div class="row">
                <div class="">
                    <div class="form-horizontal">
                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                            @Html.LabelFor(model => model.VehicleModel.RegistrationNo, new { @id = "lblRegistrationNo", @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.VehicleModel.RegistrationNo, new { @id = "RegistrationNo", @Placeholder = "Registration No", @class = "form-control", @name = "Vehicle.RegistrationNo" })
                                @Html.ValidationMessageFor(model => model.VehicleModel.RegistrationNo)
                            </div>
                        </div>
                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                            @Html.LabelFor(model => model.VehicleModel.CurrentMileage, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(model => model.VehicleModel.CurrentMileage, new { @Placeholder = "Current Mileage", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.VehicleModel.CurrentMileage)
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                            @Html.LabelFor(model => model.VehicleModel.FuelLevel, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @if (Model != null && Model.VehicleModel.FuelLevelList != null && Model.VehicleModel.FuelLevelList.Count > 0)
                                {@Html.DropDownListFor(model => model.VehicleModel.FuelLevel, new SelectList(Model.VehicleModel.FuelLevelList, "GlobalCodeId", "CodeName"), "--Select--", new { @class = "form-control requiredselect", @id = "FuelLevel" })}
                                else
                                { <select id="FuelLevel" name="FuelLevel" class="form-control requiredselect"><option id="" value="">--Select--</option></select>}
                                @Html.ValidationMessageFor(model => model.VehicleModel.FuelLevel)
                            </div>
                        </div>
                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                            @Html.LabelFor(model => model.VehicleModel.Breaks, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @if (Model != null && Model.VehicleModel.FunctionalStatus != null && Model.VehicleModel.FunctionalStatus.Count > 0)
                                {@Html.DropDownListFor(model => model.VehicleModel.Breaks, new SelectList(Model.VehicleModel.FunctionalStatus, "GlobalCodeId", "CodeName"), "--Select--", new { @class = "form-control requiredselect", @id = "Breaks" })}
                                else
                                { <select id="Breaks" name="Breaks" class="form-control requiredselect"><option id="" value="">--Select--</option></select>}
                                @Html.ValidationMessageFor(model => model.VehicleModel.Breaks)
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                            @Html.LabelFor(model => model.VehicleModel.Tires, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @if (Model != null && Model.VehicleModel.WorkingStatus != null && Model.VehicleModel.WorkingStatus.Count > 0)
                                {@Html.DropDownListFor(model => model.VehicleModel.Tires, new SelectList(Model.VehicleModel.WorkingStatus, "GlobalCodeId", "CodeName"), "--Select--", new { @class = "form-control requiredselect", @id = "Breaks" })}
                                else
                                { <select id="Tires" name="Tires" class="form-control requiredselect"><option id="" value="">--Select--</option></select>}
                                @Html.ValidationMessageFor(model => model.VehicleModel.Tires)
                            </div>
                        </div>

                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                            @Html.LabelFor(model => model.VehicleModel.Window, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @if (Model != null && Model.VehicleModel.FunctionalStatus != null && Model.VehicleModel.FunctionalStatus.Count > 0)
                                {@Html.DropDownListFor(model => model.VehicleModel.Window, new SelectList(Model.VehicleModel.FunctionalStatus, "GlobalCodeId", "CodeName"), "--Select--", new { @class = "form-control requiredselect", @id = "Breaks" })}
                                else
                                { <select id="Window" name="Window" class="form-control requiredselect"><option id="" value="">--Select--</option></select>}
                                @Html.ValidationMessageFor(model => model.VehicleModel.Window)
                            </div>
                        </div>

                        <div class="clearfix"></div>
                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                            @Html.LabelFor(model => Model.VehicleModel.IsDamage, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.RadioButtonFor(model => Model.VehicleModel.IsDamage, false, new { @onchange = "fndamageremarks();" }) No @Html.RadioButtonFor(model => Model.VehicleModel.IsDamage, true, new { @id = "IsDamage", @onchange = "fndamageremarks();" }) Yes
                            </div>
                        </div>
                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12" id="DamageRemarks" style="display:none;">
                            @Html.LabelFor(model => model.VehicleModel.DamageToReportRemarks, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextAreaFor(model => model.VehicleModel.DamageToReportRemarks, new { @Placeholder = "Remarks for Damage", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.VehicleModel.DamageToReportRemarks)
                            </div>
                        </div>



                        <div class="clearfix"></div>
                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                            @Html.LabelFor(model => Model.VehicleModel.ExteriorClean, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.RadioButtonFor(model => Model.VehicleModel.ExteriorClean, false, new { @onchange = "fnexteriorclean();" }) No @Html.RadioButtonFor(model => Model.VehicleModel.ExteriorClean, true, new { @id = "IsExteriorClean", @onchange = "fnexteriorclean();" }) Yes
                            </div>
                        </div>
                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12" id="ExteriorClean" style="display:none;">
                            @Html.LabelFor(model => model.VehicleModel.ExteriorCleanNotes, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextAreaFor(model => model.VehicleModel.ExteriorCleanNotes, new { @Placeholder = "Exterior Clean Notes", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.VehicleModel.ExteriorCleanNotes)
                            </div>
                        </div>

                        <div class="clearfix"></div>
                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                            @Html.LabelFor(model => Model.VehicleModel.InteriorClean, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.RadioButtonFor(model => Model.VehicleModel.InteriorClean, false, new { @onchange = "fninteriorclean();" }) No @Html.RadioButtonFor(model => Model.VehicleModel.InteriorClean, true, new { @id = "IsInteriorClean", @onchange = "fninteriorclean();" }) Yes
                            </div>
                        </div>
                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12" id="InteriorClean" style="display:none;">
                            @Html.LabelFor(model => model.VehicleModel.InteriorCleanNotes, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextAreaFor(model => model.VehicleModel.InteriorCleanNotes, new { @Placeholder = "Interior Clean Notes", @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.VehicleModel.InteriorCleanNotes)
                            </div>
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"></div>
    </div>
</div>
<script type="text/javascript">

    function fndamageremarks() {
        if ($('#IsDamage').prop('checked') === true && $('#IsDamage').val() === 'True') { $('#DamageRemarks').show(); }
        else { $('#DamageRemarks').hide(); }
    }

    function fnexteriorclean() {
        if ($('#IsExteriorClean').prop('checked') === true && $('#IsExteriorClean').val() === 'True') { $('#ExteriorClean').show(); }
        else { $('#ExteriorClean').hide(); }
    }

    function fninteriorclean() {
        if ($('#IsInteriorClean').prop('checked') === true && $('#IsInteriorClean').val() === 'True') { $('#InteriorClean').show(); }
        else { $('#InteriorClean').hide(); }
    }
</script>
