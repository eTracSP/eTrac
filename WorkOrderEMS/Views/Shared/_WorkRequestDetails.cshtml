@model WorkOrderEMS.Models.WorkRequestModel
@{
    var routeValues = HttpContext.Current.Request.RequestContext.RouteData.Values;
    string Controller = string.Empty;
    if (routeValues != null)
    {
        //if (routeValues.ContainsKey("action"))
        //{
        //    var actionName = routeValues["action"].ToString();
        //}
        if (routeValues.ContainsKey("controller"))
        {
            Controller = routeValues["controller"].ToString();
        }
    }
}
<div class="panel-body">
    <div class="row">
        <div class="">
            <div class="form-horizontal">
                <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                    @Html.DisplayNameFor(model => model.TaskName)
                    <div class="col-md-8">
                        @Html.DisplayFor(model => model.TaskName, new { @Placeholder = "Task Name", @class = "form-control" })
                    </div>
                </div>
                <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                    @Html.DisplayNameFor(model => model.TaskPriorityName)
                    <div class="col-md-8">
                        @Html.DisplayFor(model => model.TaskPriorityName)
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                    @Html.DisplayNameFor(model => model.TaskTypeName)
                    <div class="col-md-8">
                        @Html.DisplayFor(model => model.TaskTypeName)
                    </div>
                </div>
                <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                    @Html.DisplayNameFor(model => model.WorkAreaName)
                    <div class="col-md-8">
                        @Html.DisplayFor(model => model.WorkAreaName)
                    </div>
                </div>
                <div class="clearfix"></div>

                @*<div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                @Html.LabelFor(model => model.StartTime, new { @class = "col-sm-4 control-label" })
                                <div class="col-md-8">

                                    @Html.TextBoxFor(model => model.StartTime, new { @Placeholder = "Start Time", @class = "form-control", @id = "StartTime" })
                                    @Html.ValidationMessageFor(model => model.StartTime)
                                </div>
                            </div>
                        <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                @Html.LabelFor(model => model.CompletionTime, new { @class = "col-sm-4 control-label" })
                                <div class="col-md-8">
                                    @Html.TextBoxFor(model => model.CompletionTime, new { @Placeholder = "Completion Time", @class = "form-control", @id = "CompletionTime" })
                                    @Html.ValidationMessageFor(model => model.CompletionTime)
                                </div>
                            </div>

                    <div class="clearfix"></div>*@

                <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                    @Html.DisplayNameFor(model => model.Remarks)
                    <div class="col-md-8">
                        @Html.DisplayFor(model => model.Remarks)
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                    <div class="col-sm-offset-4 col-sm-8">

                    </div>
                </div>              
                <div class="clearfix"></div>
            </div>
        </div>
    </div>
</div>
@*<script type="text/javascript">
        $('#StartTime').timepicker({ timeFormat: "hh:mm tt" });
        $('#CompletionTime').timepicker({ timeFormat: "hh:mm tt" });
    </script>*@
