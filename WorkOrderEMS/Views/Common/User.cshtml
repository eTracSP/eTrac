@{
    ViewBag.Title = "Create User";
    Layout = "~/Views/Shared/_GlobalAdminLayout.cshtml";

    long UserType = 0; bool GloblaAdminUser, ITAdminUser, OnlyAdminUser, ManagerUser, EmployeeUser, ClientUser;
    GloblaAdminUser = ITAdminUser = OnlyAdminUser = ManagerUser = EmployeeUser = ClientUser = false;
    WorkOrderEMS.Models.eTracLoginModel ObjLogin = (WorkOrderEMS.Models.eTracLoginModel)Session["eTrac"];
    if (ObjLogin != null)
    {
        UserType = ObjLogin.UserRoleId;

        #region Get Active User Type Flag
        /*Get Active User Type Flag*/

        switch ((WorkOrderEMS.Helper.UserType)ObjLogin.UserRoleId)
        {
            case WorkOrderEMS.Helper.UserType.GlobalAdmin:
                GloblaAdminUser = true;
                break;
            case WorkOrderEMS.Helper.UserType.ITAdministrator:
                ITAdminUser = true;
                break;
            case WorkOrderEMS.Helper.UserType.Administrator:
                OnlyAdminUser = true;
                break;
            case WorkOrderEMS.Helper.UserType.Manager:
                ManagerUser = true;
                break;
            case WorkOrderEMS.Helper.UserType.Employee:
                EmployeeUser = true;
                break;
            case WorkOrderEMS.Helper.UserType.Client:
                ClientUser = true;
                break;
            default:
                GloblaAdminUser = ITAdminUser = OnlyAdminUser = ManagerUser = EmployeeUser = ClientUser = false;
                break;
        }

        /*Get Active User Type Flag*/
        #endregion Get Active User Type Flag
    }
    else
    {
        WorkOrderEMS.Helper.AlertMessageClass ObjAlertMessageClass = new WorkOrderEMS.Helper.AlertMessageClass();
        ViewBag.AlertMessageClass = ObjAlertMessageClass.Danger; ViewBag.Message = WorkOrderEMS.Helper.CommonMessage.SessionExpired();
        //throw new Exception(WorkOrderEMS.Helper.CommonMessage.SessionExpired());
        //Server.Transfer("Error");
        Response.Redirect("~/Views/Shared/_GlobalAdminLayout.cshtml");
    }
    ViewBag.myModelprefixName = "UserModel."; ViewBag.ActionSection = "itadmin";
    string myModelprefix = ViewBag.myModelprefixName;
    string myModelprefixwidProfileImage = myModelprefix + "ProfileImage";
    string myModelmyProfileImage = myModelprefix + "myProfileImage";
    string UserTypeControlName = myModelprefix + "UserType";
    //string ProfileImageLabelCaption = "Profile Image";

    string ProfileImageLabelCaption = myModelprefix + ((ViewBag.ActionSection == "client") ? "Client Logo" : "Profile Image");
    long hiddnUserType = 0;
    string StateID = string.Empty, Image = "no-profile-pic.jpg";
    var routeValues = HttpContext.Current.Request.RequestContext.RouteData.Values;
    string actionName = string.Empty; string Controller = string.Empty, ActionName = string.Empty;
    if (routeValues != null)
    {
        if (routeValues.ContainsKey("action"))
        { actionName = routeValues["action"].ToString(); }
    }

}<div class="clearfix"></div>
</div>
</section>
@Html.ValidationSummary(true)
<input type="hidden" value='@hiddnUserType' name='@UserTypeControlName'>
<input type="hidden" name="UserModel.EmployeeCategory" id="UserCategory" value='@Controller' />
@Html.Hidden("StateList", null, new { id = myModelprefix + "StateList", Value = ViewBag.StateList })
@Html.Hidden(myModelprefix + "UserId")
@Html.Hidden(myModelprefix + "AddressMasterId")
@Html.Hidden(myModelprefix + "Address.AddressMasterId")
<div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
    @using (Html.BeginForm("CreateUser", "Common", new { ActionName = ViewBag.ActionName }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="panel panel-default">
            <div class="panel-heading">
                User Details
            </div>
            <div class=" clearfix"></div>
            <div class="locationRoles">
                Location & Roles
            </div>
            <div class="form-horizontal">
                <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                    @Html.Label("UserType", "User Type", new { @class = "col-sm-4 control-label star" })
                    <div class="col-sm-8">
                        @if (ViewBag.Country != null)
                        {
                             @Html.DropDownList("SelectedUserType", new SelectList(ViewBag.UserType, "GlobalCodeId", "CodeName"), "--Select--", new { @class = "form-control required requiredselect", })
                        }
                        else
                        {
                            <select class="form-control required requiredselect " id="SelectedUserType"><option>Select</option></select>
                        }
                        @Html.ValidationMessage("SelectedUserType")
                    </div>
                </div>
                <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12 divLocation">
                    @Html.Label("Location", "Location", new { @class = "col-sm-4 control-label" })
                    <div class="col-sm-8">
                        @if (Session != null)
                        {
                            if (Session["eTrac_UserLocations"] != null)
                            {
                                @Html.DropDownList("LocationId", new SelectList((List<WorkOrderEMS.Models.UserLocations>)Session["eTrac_UserLocations"], "LocationId", "LocationName"), "--Select--", new { @class = "form-control", @id = "drp_UserRegisterLocation" })
                                @Html.ValidationMessage("LocationId")
                                @Html.Hidden("LocationName");
                            }
                        }
                    </div>
                </div>
                <div class="form-group col-lg-6 col-md-6 col-sm-12 col-xs-12 divLocationServices">
                    @Html.Label("Location Services", new { @class = "col-sm-4 control-label star" })
                    <div class="col-sm-8 locationServices">
                        <select class="form-control requiredselect " id="ddlServices" multiple></select>
                        @*@Html.DropDownList("Services", new SelectList(ViewBag.Services, "PermissionId", "PermissionName"), new { @id = "ddlServices", @multiple = "multiple", @class = "form-control LocationServices" })*@
                        <span style="display: none; color:#D54A48;" class="">Select at least one service for this location.</span>
                        @Html.Hidden("ServicesID")
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="locationRoles">
                Personal Details
            </div>

            <div id="CreateUser">
                @Html.Partial("_myRegistration")
            </div>
            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                <div class="text-right">
                    <button class="btn btn-default bluebutton" type="submit">Save</button>
                    <a href="~/GlobalAdmin" class="btn btn-default bluebutton">Cancel</a>
                    @*<a class="btn btn-default bluebutton" href="@System.Configuration.ConfigurationManager.AppSettings["hostingPrefix"]">Cancel</a>*@
                    <div class="clearfix"></div>
                </div>
            </div><div class="clearfix"></div>
            <div class="marbottom"></div>
        </div>
    }
</div>
<div class="clearfix"></div>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    var idslist = "";
    $("#drp_UserRegisterLocation").change(function () {
       
        var LocationID = $(this).val();
        var UserType = $("#SelectedUserType option:selected").val();
        if (LocationID != null && UserType != null && UserType != "" && LocationID != "") {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetLocationServicePermissionList", "Common")',
                data: { LocationID: LocationID, UserType: UserType },
                success: function (Data) {
                    if (Data != null && Data.length > 0) {
                        $("#ddlServices").empty();

                        for (var i = 0; i < Data.length; i++) {
                            $("#ddlServices").append("<option value=" + Data[i].PermissionId + ">" + Data[i].PermissionName + "</option>");
                        }
                        $("#ddlServices").multiselect('rebuild');
                        $(".divLocationServices").show();
                        $("#LocationName").val($("#drp_UserRegisterLocation option:selected").text());
                    }
                },
                error: function () {
                }
            })
            //------END------//
        }
    })

    //This script for if IT-Admin no need to show Location ddl.
    $("#SelectedUserType").change(function () {
        $(".divLocationServices").hide();
        var SelectedUserType = $("#SelectedUserType option:selected").val();
        if (SelectedUserType == '' || SelectedUserType == '5' || SelectedUserType == 5) {
            $("#drp_UserRegisterLocation").val('');
            $(".divLocation").hide();
        } else {
            $("#drp_UserRegisterLocation").val('');
            $(".divLocation").show();
        }
    });



    function validateCustomFields(form) {

        if ($("#ServicesID").val() === "" || $("#ServicesID").val() === null || $("#ServicesID").val() === undefined) {

            $("#ServicesID").siblings('span').css("display", "block");


            return false;
        }
        else {

            $("#ServicesID").siblings('span').css("display", "none");

            return true;
        }
    }
    $(document).ready(function () {
        //This line is for first time when page render loc service hide bcoz of when selected location according to loc services render.
        $(".divLocationServices").hide();


        $('#ddlServices').multiselect({
            maxHeight: '300',
            onChange: function (element, checked) {
                var Services = $('#ddlServices option:selected');
                var selected = [];
                $(Services).each(function (index, Services) {
                    //if (index > 0) {
                    var ss = $(Services).val();
                    if (ss != undefined && parseInt(ss) > 0) {
                        //alert(parseInt(ss));// found
                        selected.push([$(this).val()]);
                    }
                    //}
                });
                $("#ServicesID").val(selected);
            }
        });
        ////var Arr = $_ServiceID.split(',');

        ////for (var i = 0; i < Arr.length; i++) {
        ////    $("#ddlServices").multiselect("select", $.trim(Arr[i]));
        ////}
        //("#ddlServices").multiselect('rebuild');

    });
    $("#drp_MasterLocation").hide();//.attr("display", "none");

</script>
@if (ViewBag.Message != null)
{
    <script>

           var a = '@ViewBag.Message';
    toastr.success(a);
    </script>
}
