@model WorkOrderEMS.Models.VendorModel
@{
    string StateID = string.Empty, Image = "no-profile-pic.jpg";
    if (Model != null)
    {
        if (Model.StateId.HasValue)
        {
            StateID = Convert.ToString(Model.StateId.Value);
        }
        Image = string.IsNullOrEmpty(Model.VendorImage) ? "no-profile-pic.jpg" : Model.VendorImage;
    }

    if (ViewBag.UpdateMode != null && ViewBag.UpdateMode == true)
    {
        ViewBag.Title = "Update Vendor";

    }

}
<script src="~/Scripts/common/Masking.js"></script>
<script src="~/Scripts/ImageUpload/FileUpload.js"></script>
<script src="~/Scripts/BindDropDown/DropDownList.js"></script>
@Html.ValidationSummary(true)


@{
    ViewBag.Title = "Vendor Registration";
    Layout = "~/Views/Shared/_ManagerLayout.cshtml";
}

<div class="col-lg-12 col-md-12  col-sm-12  col-xs-12">
    @*<div class="panel panel-default">*@
    @*<div class="panel-heading">
            Personal Details
        </div>*@

    <div class="panel panel-default first-mar10">
        <div class="panel-heading">

            <a href="#collapseOne" data-parent="#accordion" data-toggle="collapse" class="accordion-toggle">
                <h4 class="panel-title">
                    Vendor <span>Details</span>
                </h4>
            </a>

        </div>
        <div id="collapseOne" class="panel-collapse collapse in">
            <div class="panel-body">

                <div class="panel-body">
                    @using (Html.BeginForm("Vendor", "Manager", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {

                        @Html.HiddenFor(model => Model.VendorID)
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <div class="">
                                <div class="form-horizontal">
                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.OrganizationName, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => Model.OrganizationName, new { @Placeholder = "Organization Name", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => Model.OrganizationName)
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.IndustryName, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => Model.IndustryName, new { @Placeholder = "Industry Name", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => Model.IndustryName)
                                        </div>
                                    </div>

                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.CompanySize, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => Model.CompanySize, new { @Placeholder = "Company Size", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => Model.CompanySize)
                                        </div>
                                    </div>



                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.OrganizationLogo, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8 col-sm-offset-4">
                                            <img id="ProfileImageog" src="@Url.Content("~/Content/Images/LocationLogo/" + Image)"
                                                 class="img-rounded" alt="Rounded Image" style="width: 75px; height: 75px;">
                                            <input type="file" id="imageog" name="OrganizationLogo" onchange="readURL(this);" value=" upload image">
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="form-horizontal">
                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.ContactName, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => Model.ContactName, new { @Placeholder = "Contact Name", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => Model.ContactName)
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        <div class="col-sm-8">
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>


                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.VendorEmail, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => Model.VendorEmail, new { @Placeholder = "Email ID", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => Model.VendorEmail)
                                        </div>
                                    </div>

                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.VendorImage, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8 col-sm-offset-4">
                                            <img id="ProfileImagevi" src="@Url.Content("~/Content/Images/LocationLogo/" + Image)"
                                                 class="img-rounded" alt="Rounded Image" style="width: 75px; height: 75px;">
                                            <input type="file" id="imagevi" name="VendorImage" onchange="readURL(this);" value=" upload image">
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                            </div>
                        </div>

                        @*=================================*@
                        <div class="panel-heading">
                            Contact Details
                        </div>
                        <div class="row">
                            <div class="">
                                <div class="form-horizontal">
                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.Address1, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => Model.Address1, new { @Placeholder = "Address1", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => Model.Address1)
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.Address2, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => Model.Address2, new { @Placeholder = "Address2", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => Model.Address2)
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.CountryId, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            @if (Model != null && ViewBag.Country != null)
                                            { @Html.DropDownListFor(model => Model.CountryId, new SelectList(ViewBag.Country, "CountryID", "CountryName"), "--Select--", new { @class = "form-control requiredselect", @id = "Country", @onchange = "BindState()" })}
                                            else
                                            {<select class="form-control requiredselect" id="Country"><option>Select</option></select>}
                                            @Html.ValidationMessageFor(model => Model.CountryId)
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.StateId, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            <select id="States" name="StateId" class="form-control required requiredselect"><option value="0">--Select--</option></select>
                                            @Html.ValidationMessageFor(model => Model.StateId)
                                        </div>
                                    </div>

                                    <div class="clearfix"></div>

                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.City, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => Model.City, new { @Placeholder = "City", @maxLength = "100", @class = "form-control" })
                                            @Html.ValidationMessageFor(model => Model.City)
                                        </div>
                                    </div>

                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.ZipCode, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => Model.ZipCode, new { @Placeholder = "ZipCode", @class = "Postal form-control" })
                                            @Html.ValidationMessageFor(model => Model.ZipCode)
                                        </div>
                                    </div>

                                    <div class="clearfix"></div>

                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.Mobile, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => Model.Mobile, new { @Placeholder = "Mobile", @class = "Mobile form-control" })
                                            @Html.ValidationMessageFor(model => Model.Mobile)
                                        </div>
                                    </div>
                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        @Html.LabelFor(model => Model.Phone, new { @class = "col-sm-4 control-label" })
                                        <div class="col-sm-8">
                                            @Html.TextBoxFor(model => Model.Phone, new { @Placeholder = "Phone", @class = "Phone form-control" })
                                            @Html.ValidationMessageFor(model => Model.Phone)
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="margintop10"></div>
                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        <div class="col-sm-offset-4 col-sm-8">

                                        </div>
                                    </div>
                                    <div class="form-group col-lg-6 col-md-6 col-sm-12  col-xs-12">
                                        <div class="col-sm-offset-4 col-sm-8">
                                            <button class="btn btn-default bluebutton" type="submit">Save</button>
                                            @*<a href='@Url.Action("Vendor", "Manager")' class="btn btn-default bluebutton">Cancel</a>*@
                                            @if (Model != null && Model.VendorID != null && Model.VendorID > 0)
                                            {@Html.ActionLink("Cancel", "ListVendor", "Manager", null, new { @class = "btn btn-default bluebutton" })}
                                            else
                                            { @Html.ActionLink("Cancel", "Vendor", "Manager", null, new { @class = "btn btn-default bluebutton" })}
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    @section scripts{
        @Scripts.Render("~/bundles/jqueryval")


        <script type="text/javascript">
            $_GetStateByCountryIDUrl = '@Url.Action("GetStateByCountryID", "Dropdown")';
            $_StateID = '@StateID';
            $_imagePath = '@Url.Action("UploadImage", "GlobalAdmin")';
            function readURL(input) {
                var FType = ["jpg", "JPG", "PNG", "png", "JPEG", "jpeg", "gif", "GIF"]
                if (input.files && input.files[0]) {
                    var LoadImage = false;
                    var FileExtension = input.value.split(".")[1];
                    for (var v = 0; v < FType.length; v++) {
                        if (FType[v] == FileExtension) {
                            LoadImage = true;
                        }
                    }
                    if (LoadImage == true) {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            if ($(input).prop('id') == 'imageog') {
                                $('#ProfileImageog')
                                    .attr('src', e.target.result)
                                    .width(150)
                                    .height(150);
                            }
                            else if ($(input).prop('id') == 'imagevi') {
                                $('#ProfileImagevi')
                                    .attr('src', e.target.result)
                                    .width(150)
                                    .height(150);
                            }
                        };
                        reader.readAsDataURL(input.files[0]);
                    } else {
                        $(input).val("");
                        alert("Please select image to upload!")
                        return false;
                    }
                }
            }
            $(document).ready(function () {
                if ($("#Country").val() != '') {
                    BindState();
                }
            });
            //$(document).ready(function () {
            //    var d = new Date();
            //    var curr_year = d.getFullYear();
            //    $("#DOB").datepicker({ dateFormat: 'dd/mm/yy', maxDate: new Date, changeMonth: true, changeYear: true });
            //});
        </script>
    }


